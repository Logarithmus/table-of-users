package socialcrud.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.security.core.Authentication;

import java.security.Principal;
import java.util.ArrayList;
import java.util.List;

import socialcrud.User;
import socialcrud.UserRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/users") // This means URL's start with /demo (after Application path)
public class UsersController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String id,
											@RequestParam String provider,
		                                    @RequestParam String name) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		User user = new User();
		user.setId(id);
		user.setProvider("Google");
		user.setName(name);
		user.setFirstLogin(null);
		user.setLastLogin(null);
		user.setIsActive(true);
		userRepository.save(user);
		return "Saved";
	}

	@GetMapping
	public String getAllUsers(Model model) {
		Iterable<User> usersList = userRepository.findAll();
		model.addAttribute("users", usersList);
		return "users";
	}

	
}